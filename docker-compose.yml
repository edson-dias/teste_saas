version: "3"

services:
  postgres:
    image: postgres:14.1-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=developer123
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "54321:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    environment:
    - RABBITMQ_DEFAULT_USER=admin
    - RABBITMQ_DEFAULT_PASS=admin123
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - rabbitmq-data:/var/lib/rabbitmq/
        - rabbitmq-data:/var/log/rabbitmq

  app:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      - API_HOST=app
      - PYTHONDONTWRITEBYTECODE=1
    volumes:
      - ./src:/src
    ports:
      - "8000:8000"

  celery:
    build:
      context: .
    command: sh -c "celery -A saas.celery  worker --loglevel=INFO"
    depends_on:
      - app
      - rabbitmq
    env_file:
      - ./.env
    volumes:
      - ./src:/src
  
  celerybeat:
    build:
      context: .
    command: sh -c "celery -A saas.celery beat --loglevel=INFO"
    env_file:
      - ./.env
    depends_on:
      - app
      - rabbitmq
    volumes:
      - ./src:/src

volumes:
  db-data:
  rabbitmq-data:

